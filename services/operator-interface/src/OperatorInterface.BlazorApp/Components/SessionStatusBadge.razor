@using OperatorInterface.Core.Domain.SharedKernel
<span class="badge @GetBadgeClass()">
    <i class="bi @GetStatusIcon()"></i>
    @GetStatusText()
</span>

@code {
    [Parameter, EditorRequired]
    public SessionStatus Status { get; set; }

    private string GetBadgeClass()
    {
        return Status switch
        {
            SessionStatus.Authorized => "bg-info",
            SessionStatus.ReadyToWork => "bg-success",
            SessionStatus.WaitingAssignment => "bg-warning text-dark",
            SessionStatus.WaitingClient => "bg-warning text-dark",
            SessionStatus.ServingClient => "bg-primary",
            SessionStatus.Closed => "bg-secondary",
            _ => "bg-light text-dark"
        };
    }

    private string GetStatusIcon()
    {
        return Status switch
        {
            SessionStatus.Authorized => "bi-shield-check",
            SessionStatus.ReadyToWork => "bi-play-circle",
            SessionStatus.WaitingAssignment => "bi-hourglass-split",
            SessionStatus.WaitingClient => "bi-person-check",
            SessionStatus.ServingClient => "bi-person-workspace",
            SessionStatus.Closed => "bi-stop-circle",
            _ => "bi-question-circle"
        };
    }

    private string GetStatusText()
    {
        return Status switch
        {
            SessionStatus.Authorized => "Авторизован",
            SessionStatus.ReadyToWork => "Готов к работе",
            SessionStatus.WaitingAssignment => "Ожидание назначения",
            SessionStatus.WaitingClient => "Ожидание клиента",
            SessionStatus.ServingClient => "Обслуживает клиента",
            SessionStatus.Closed => "Смена закрыта",
            _ => "Неизвестный статус"
        };
    }
}