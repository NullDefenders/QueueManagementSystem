@using OperatorInterface.Core.Domain.SharedKernel
<div class="card h-100">
    <div class="card-header">
        <h6 class="card-title mb-0">
            <i class="bi bi-list-check"></i> Назначенные услуги
        </h6>
    </div>
    <div class="card-body">
        @if (Services.Any())
        {
            <div class="list-group list-group-flush">
                @foreach (var service in Services)
                {
                    <div class="list-group-item px-0 border-0">
                        <div class="d-flex w-100 justify-content-between align-items-start mb-2">
                            <div class="flex-grow-1">
                                <div class="d-flex align-items-center mb-1">
                                    <span class="badge bg-info me-2 fs-6">@service.ServiceCode</span>
                                    <h6 class="mb-0 fw-semibold">@service.ServiceName</h6>
                                </div>
                                @if (!string.IsNullOrEmpty(service.ServiceName))
                                {
                                    <p class="mb-0 text-muted small">@service.ServiceName</p>
                                }
                            </div>
                            <i class="bi bi-check-circle text-success ms-2"
                               title="Услуга активна"
                               data-bs-toggle="tooltip"></i>
                        </div>

                        @if (service != Services.Last())
                        {
                            <hr class="my-2">
                        }
                    </div>
                }
            </div>

            <div class="mt-3 pt-3 border-top">
                <small class="text-muted d-flex align-items-center">
                    <i class="bi bi-info-circle me-1"></i>
                    Всего услуг: @Services.Count
                </small>
            </div>
        }
        else
        {
            <div class="text-center py-4">
                <div class="mb-3">
                    <i class="bi bi-exclamation-triangle-fill text-warning" style="font-size: 2rem;"></i>
                </div>
                <h6 class="text-muted mb-2">Услуги не назначены</h6>
                <p class="text-muted small mb-0">
                    Обратитесь к администратору для назначения услуг
                </p>
            </div>
        }
    </div>

    @if (Services.Any())
    {
        <div class="card-footer bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted">
                    <i class="bi bi-clock"></i>
                    Обновлено: @DateTime.Now.ToString("HH:mm:ss")
                </small>
                <button type="button"
                        class="btn btn-outline-primary btn-sm"
                        @onclick="RefreshServices"
                        title="Обновить список услуг"
                        data-bs-toggle="tooltip">
                    <i class="bi bi-arrow-clockwise"></i>
                </button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public IReadOnlyList<ServiceInfo> Services { get; set; } = new List<ServiceInfo>();

    [Parameter]
    public EventCallback OnRefreshRequested { get; set; }

    private async Task RefreshServices()
    {
        if (OnRefreshRequested.HasDelegate)
        {
            await OnRefreshRequested.InvokeAsync();
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize Bootstrap tooltips if needed
            // In a real app, you might call JS interop here
        }
    }
}