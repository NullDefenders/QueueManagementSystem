version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3.13.7-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Web UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # ← том для данных
      - rabbitmq_logs:/var/log/rabbitmq   # ← том для логов
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s
      
  redis:
    image: redis/redis-stack:latest
    container_name: redis-stack
    environment:
      - REDIS_STACK_ACCEPT_TERMS=yes      # Принимаем EULA
      - REDIS_STACK_DATA_DIR=/data        # Директория данных
      - REDIS_STACK_INSECURE_MODE=true    # Для разработки
    ports:
      - "6379:6379" # Redis
      - "8001:8001" # Web UI
    volumes:
      - redis_data:/data                  # Сохраняем данные
      - redis_config:/etc/redis-stack     # Сохраняем конфиг
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  queue-service:
    build: .
    container_name: queue-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RabbitMQ__HostName=rabbitmq
      - Redis__Host=redis
    restart: unless-stopped

volumes:
  rabbitmq_data:
    driver: local
  rabbitmq_logs:
    driver: local
  redis_data:
    driver: local
  redis_config:
    driver: local